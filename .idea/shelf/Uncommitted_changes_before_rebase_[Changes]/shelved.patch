Index: src/main/java/com/backtrader/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.backtrader.service;\r\n\r\nimport java.util.UUID;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.mail.MailSender;\r\nimport org.springframework.security.core.userdetails.UserDetails;\r\nimport org.springframework.security.core.userdetails.UserDetailsService;\r\nimport org.springframework.security.core.userdetails.UsernameNotFoundException;\r\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport com.backtrader.repository.ForgotPasswordTokenRepository;\r\nimport com.backtrader.repository.UserRepository;\r\nimport com.backtrader.userentity.ForgotPasswordToken;\r\nimport com.backtrader.userentity.Users;\r\n\r\n@Service\r\npublic class UserService implements UserDetailsService {\r\n\t@Autowired\r\n\tprivate MailSender mailSender;\r\n\t@Autowired\r\n\tprivate ForgotPasswordTokenRepository passwordTokenRepository;\r\n\t@Autowired\r\n\tprivate UserRepository userRepository;\r\n\r\n\tpublic Users createUser(Users user) {\r\n\t\tBCryptPasswordEncoder encoder = new BCryptPasswordEncoder();\r\n\t\tuser.setPassword(encoder.encode(user.getPassword()));\r\n\t\treturn userRepository.save(user);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\r\n\t\tUsers user = userRepository.findByEmail(username);\r\n\t\tif (user != null) {\r\n\t\t\treturn new org.springframework.security.core.userdetails.User(user.getFullname(), user.getPassword(),\r\n\t\t\t\t\tuser.getRoles());\r\n\r\n\t\t} else {\r\n\t\t\tthrow new UsernameNotFoundException(\"Unable to fetch user details\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void resetPassword(String email) {\r\n\t\tString token = UUID.randomUUID().toString();\r\n\t\tUsers user = userRepository.findByEmail(email);\r\n\t\tif (user != null) {\r\n\t\t\tForgotPasswordToken passwordToken = new ForgotPasswordToken();\r\n\t\t\tpasswordToken.setToken(token);\r\n\t\t\tpasswordToken.setUsers(user);\r\n\t\t}\r\n\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/backtrader/service/UserService.java b/src/main/java/com/backtrader/service/UserService.java
--- a/src/main/java/com/backtrader/service/UserService.java	(revision eec37feef2b728fa259683ea35bb68352492ee04)
+++ b/src/main/java/com/backtrader/service/UserService.java	(date 1686818531376)
@@ -17,8 +17,8 @@
 
 @Service
 public class UserService implements UserDetailsService {
-	@Autowired
-	private MailSender mailSender;
+//	@Autowired
+//	private MailSender mailSender;
 	@Autowired
 	private ForgotPasswordTokenRepository passwordTokenRepository;
 	@Autowired
Index: target/classes/META-INF/maven/com.backtrader/backtrader/pom.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Generated by Maven Integration for Eclipse\r\n#Thu Jun 15 11:54:07 IST 2023\r\nm2e.projectLocation=D\\:\\\\BackTrader\\\\backTrader\r\nm2e.projectName=backTrader\r\ngroupId=com.backtrader\r\nartifactId=backtrader\r\nversion=0.0.1-SNAPSHOT\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/target/classes/META-INF/maven/com.backtrader/backtrader/pom.properties b/target/classes/META-INF/maven/com.backtrader/backtrader/pom.properties
--- a/target/classes/META-INF/maven/com.backtrader/backtrader/pom.properties	(revision eec37feef2b728fa259683ea35bb68352492ee04)
+++ b/target/classes/META-INF/maven/com.backtrader/backtrader/pom.properties	(date 1686819535185)
@@ -1,5 +1,5 @@
 #Generated by Maven Integration for Eclipse
-#Thu Jun 15 11:54:07 IST 2023
+#Thu Jun 15 14:28:55 IST 2023
 m2e.projectLocation=D\:\\BackTrader\\backTrader
 m2e.projectName=backTrader
 groupId=com.backtrader
Index: src/main/java/com/backtrader/jwtConfig/JwtToken.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.backtrader.jwtConfig;\r\n\r\nimport java.util.Date;\r\n\r\nimport org.springframework.beans.factory.annotation.Value;\r\nimport org.springframework.security.core.Authentication;\r\nimport org.springframework.security.core.userdetails.UserDetails;\r\nimport org.springframework.stereotype.Component;\r\n\r\nimport io.jsonwebtoken.Jwts;\r\nimport io.jsonwebtoken.SignatureAlgorithm;\r\n\r\n@Component\r\npublic class JwtToken {\r\n\tlong expDate = 30000;\r\n\t@Value(\"${app.key}\")\r\n\tprivate String key;\r\n\r\n\tpublic String generateJwtToken(Authentication authentication) {\r\n\r\n\t\tUserDetails details = (UserDetails) authentication.getPrincipal();\r\n\r\n\t\treturn Jwts.builder().setSubject(details.getUsername()).setIssuedAt(new Date())\r\n\t\t\t\t.claim(\"userDetails\", details)\r\n\t\t\t\t.setExpiration(new Date(System.currentTimeMillis() + expDate))\r\n\t\t\t\t.signWith(SignatureAlgorithm.HS512, key.getBytes()).compact();\r\n\t}\r\n\r\n\tpublic String getUserNameFromToken(String token) {\r\n\t\treturn Jwts.parser().setSigningKey(key.getBytes()).parseClaimsJws(token).getBody().getSubject();\r\n\t}\r\n\r\n\tpublic boolean isTokenExpired(String authToken) {\r\n\t\treturn Jwts.parser().setSigningKey(key.getBytes()).parseClaimsJws(authToken).getBody().getExpiration()\r\n\t\t\t\t.before(new Date(System.currentTimeMillis()));\r\n\t}\r\n\r\n\tpublic boolean validateJwtToken(String authToken) {\r\n\r\n\t\tDate expiration = Jwts.parser().setSigningKey(key.getBytes()).parseClaimsJws(authToken).getBody()\r\n\t\t\t\t.getExpiration();\r\n\t\treturn (getUserNameFromToken(authToken) != null && expiration.before(new Date(System.currentTimeMillis())));\r\n\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/backtrader/jwtConfig/JwtToken.java b/src/main/java/com/backtrader/jwtConfig/JwtToken.java
--- a/src/main/java/com/backtrader/jwtConfig/JwtToken.java	(revision eec37feef2b728fa259683ea35bb68352492ee04)
+++ b/src/main/java/com/backtrader/jwtConfig/JwtToken.java	(date 1686819858851)
@@ -14,7 +14,7 @@
 public class JwtToken {
 	long expDate = 30000;
 	@Value("${app.key}")
-	private String key;
+	private String key="";
 
 	public String generateJwtToken(Authentication authentication) {
 
Index: target/classes/META-INF/maven/com.backtrader/backtrader/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>3.1.0</version>\r\n\t\t<relativePath /> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.backtrader</groupId>\r\n\t<artifactId>backtrader</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>backtrader</name>\r\n\t<description>backtrader</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t\t<exclusions>\r\n\t\t\t\t<exclusion>\r\n\t\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t\t<artifactId>spring-boot-starter-logging</artifactId>\r\n\t\t\t\t</exclusion>\r\n\t\t\t</exclusions>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-validation</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-security</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.postgresql</groupId>\r\n\t\t\t<artifactId>postgresql</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-mail</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springdoc</groupId>\r\n\t\t\t<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\r\n\t\t\t<version>2.0.2</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.github.java-json-tools</groupId>\r\n\t\t\t<artifactId>json-patch</artifactId>\r\n\t\t\t<version>1.12</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt</artifactId>\r\n\t\t\t<version>0.9.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt-impl</artifactId>\r\n\t\t\t<version>0.11.5</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt-jackson</artifactId>\r\n\t\t\t<version>0.11.5</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>javax.xml.bind</groupId>\r\n\t\t\t<artifactId>jaxb-api</artifactId>\r\n\t\t\t<version>2.3.0</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.slf4j</groupId>\r\n\t\t\t<artifactId>slf4j-api</artifactId>\r\n\t\t\t\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.slf4j</groupId>\r\n\t\t\t<artifactId>slf4j-log4j12</artifactId>\r\n\t\t\t\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<excludes>\r\n\t\t\t\t\t\t<exclude>\r\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t\t\t\t</exclude>\r\n\t\t\t\t\t</excludes>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/META-INF/maven/com.backtrader/backtrader/pom.xml b/target/classes/META-INF/maven/com.backtrader/backtrader/pom.xml
--- a/target/classes/META-INF/maven/com.backtrader/backtrader/pom.xml	(revision eec37feef2b728fa259683ea35bb68352492ee04)
+++ b/target/classes/META-INF/maven/com.backtrader/backtrader/pom.xml	(date 1686819535187)
@@ -25,12 +25,6 @@
 		<dependency>
 			<groupId>org.springframework.boot</groupId>
 			<artifactId>spring-boot-starter-web</artifactId>
-			<exclusions>
-				<exclusion>
-					<groupId>org.springframework.boot</groupId>
-					<artifactId>spring-boot-starter-logging</artifactId>
-				</exclusion>
-			</exclusions>
 		</dependency>
 		<dependency>
 			<groupId>org.springframework.boot</groupId>
@@ -94,16 +88,6 @@
 			<groupId>javax.xml.bind</groupId>
 			<artifactId>jaxb-api</artifactId>
 			<version>2.3.0</version>
-		</dependency>
-		<dependency>
-			<groupId>org.slf4j</groupId>
-			<artifactId>slf4j-api</artifactId>
-			
-		</dependency>
-		<dependency>
-			<groupId>org.slf4j</groupId>
-			<artifactId>slf4j-log4j12</artifactId>
-			
 		</dependency>
 	</dependencies>
 	<build>
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>3.1.0</version>\r\n\t\t<relativePath /> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.backtrader</groupId>\r\n\t<artifactId>backtrader</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>backtrader</name>\r\n\t<description>backtrader</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t\t<exclusions>\r\n\t\t\t\t<exclusion>\r\n\t\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t\t<artifactId>spring-boot-starter-logging</artifactId>\r\n\t\t\t\t</exclusion>\r\n\t\t\t</exclusions>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-validation</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-security</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.postgresql</groupId>\r\n\t\t\t<artifactId>postgresql</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-mail</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springdoc</groupId>\r\n\t\t\t<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\r\n\t\t\t<version>2.0.2</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.github.java-json-tools</groupId>\r\n\t\t\t<artifactId>json-patch</artifactId>\r\n\t\t\t<version>1.12</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt</artifactId>\r\n\t\t\t<version>0.9.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt-impl</artifactId>\r\n\t\t\t<version>0.11.5</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt-jackson</artifactId>\r\n\t\t\t<version>0.11.5</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>javax.xml.bind</groupId>\r\n\t\t\t<artifactId>jaxb-api</artifactId>\r\n\t\t\t<version>2.3.0</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.slf4j</groupId>\r\n\t\t\t<artifactId>slf4j-api</artifactId>\r\n\t\t\t\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.slf4j</groupId>\r\n\t\t\t<artifactId>slf4j-log4j12</artifactId>\r\n\t\t\t\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<excludes>\r\n\t\t\t\t\t\t<exclude>\r\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t\t\t\t</exclude>\r\n\t\t\t\t\t</excludes>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision eec37feef2b728fa259683ea35bb68352492ee04)
+++ b/pom.xml	(date 1686818615198)
@@ -25,12 +25,6 @@
 		<dependency>
 			<groupId>org.springframework.boot</groupId>
 			<artifactId>spring-boot-starter-web</artifactId>
-			<exclusions>
-				<exclusion>
-					<groupId>org.springframework.boot</groupId>
-					<artifactId>spring-boot-starter-logging</artifactId>
-				</exclusion>
-			</exclusions>
 		</dependency>
 		<dependency>
 			<groupId>org.springframework.boot</groupId>
@@ -94,16 +88,6 @@
 			<groupId>javax.xml.bind</groupId>
 			<artifactId>jaxb-api</artifactId>
 			<version>2.3.0</version>
-		</dependency>
-		<dependency>
-			<groupId>org.slf4j</groupId>
-			<artifactId>slf4j-api</artifactId>
-			
-		</dependency>
-		<dependency>
-			<groupId>org.slf4j</groupId>
-			<artifactId>slf4j-log4j12</artifactId>
-			
 		</dependency>
 	</dependencies>
 	<build>
Index: src/main/java/com/backtrader/userentity/ForgotPasswordToken.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.backtrader.userentity;\r\n\r\nimport jakarta.persistence.Column;\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.FetchType;\r\nimport jakarta.persistence.OneToOne;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\n@Entity\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\npublic class ForgotPasswordToken {\r\n\tprivate int id;\r\n\tprivate String token;\r\n\t@OneToOne(fetch = FetchType.EAGER,targetEntity = Users.class)\r\n\t@Column(name = \"user_id\")\r\n\tprivate Users users;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/backtrader/userentity/ForgotPasswordToken.java b/src/main/java/com/backtrader/userentity/ForgotPasswordToken.java
--- a/src/main/java/com/backtrader/userentity/ForgotPasswordToken.java	(revision eec37feef2b728fa259683ea35bb68352492ee04)
+++ b/src/main/java/com/backtrader/userentity/ForgotPasswordToken.java	(date 1686818728248)
@@ -1,11 +1,9 @@
 package com.backtrader.userentity;
 
-import jakarta.persistence.Column;
-import jakarta.persistence.Entity;
-import jakarta.persistence.FetchType;
-import jakarta.persistence.OneToOne;
+import jakarta.persistence.*;
 import lombok.AllArgsConstructor;
 import lombok.Data;
+import lombok.Generated;
 import lombok.NoArgsConstructor;
 
 @Entity
@@ -13,9 +11,10 @@
 @AllArgsConstructor
 @NoArgsConstructor
 public class ForgotPasswordToken {
+	@Id
+	@GeneratedValue(strategy = GenerationType.SEQUENCE)
 	private int id;
 	private String token;
 	@OneToOne(fetch = FetchType.EAGER,targetEntity = Users.class)
-	@Column(name = "user_id")
 	private Users users;
 }
Index: src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring:\r\n  datasource:\r\n    username: postgres\r\n    url: jdbc:postgresql://localhost:5432/organizationDatabase\r\n    driverClassName: org.postgresql.Driver\r\n    password: 'seneca123$'\r\n  jpa:\r\n    properties:\r\n      hibernate:\r\n        dialect: org.hibernate.dialect.PostgreSQLDialect\r\n    database-platform: org.hibernate.dialect.PostgreSQLDialect\r\n    hibernate:\r\n      ddl-auto: update\r\n    show-sql: 'true'\r\nlogging:\r\n  level:\r\n    org:\r\n      hibernate:\r\n        type: trace\r\n        SQL: debug\r\n # file:\r\n #     name: app.log\r\n #  pattern:\r\n #        file: '%d [%level] %c{1.} [%t] %m%n'\r\nserver:\r\n  port: 9090\r\napp:\r\n  key: 77397A24432646294A404E635266546A576E5A7234753778214125442A472D4B\r\n\r\n   \r\n    \r\n \r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/application.yml b/src/main/resources/application.yml
--- a/src/main/resources/application.yml	(revision eec37feef2b728fa259683ea35bb68352492ee04)
+++ b/src/main/resources/application.yml	(date 1686819950439)
@@ -1,7 +1,7 @@
 spring:
   datasource:
     username: postgres
-    url: jdbc:postgresql://localhost:5432/organizationDatabase
+    url: jdbc:postgresql://localhost:5432/StockTask
     driverClassName: org.postgresql.Driver
     password: 'seneca123$'
   jpa:
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	(date 1686818028929)
+++ b/.idea/encodings.xml	(date 1686818028929)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1686818028944)
+++ b/.idea/jarRepositories.xml	(date 1686818028944)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1686818056142)
+++ b/.idea/compiler.xml	(date 1686818056142)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="true" />
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="backtrader" />
+      </profile>
+    </annotationProcessing>
+  </component>
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="backtrader" options="-parameters" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1686818028915)
+++ b/.idea/misc.xml	(date 1686818028915)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK" />
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1686818028954)
+++ b/.idea/vcs.xml	(date 1686818028954)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1686818029329)
+++ b/.idea/.gitignore	(date 1686818029329)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
